[{"C:\\Users\\lilii\\source\\repos\\covid-dashboard\\src\\index.jsx":"1","C:\\Users\\lilii\\source\\repos\\covid-dashboard\\src\\reportWebVitals.js":"2","C:\\Users\\lilii\\source\\repos\\covid-dashboard\\src\\App.jsx":"3","C:\\Users\\lilii\\source\\repos\\covid-dashboard\\src\\services\\requests.jsx":"4","C:\\Users\\lilii\\source\\repos\\covid-dashboard\\src\\components\\MapComponents\\InteractiveMap.jsx":"5","C:\\Users\\lilii\\source\\repos\\covid-dashboard\\src\\components\\TableComponents\\DashboardTable.jsx":"6","C:\\Users\\lilii\\source\\repos\\covid-dashboard\\src\\components\\Header\\Header.jsx":"7","C:\\Users\\lilii\\source\\repos\\covid-dashboard\\src\\components\\Footer\\Footer.jsx":"8","C:\\Users\\lilii\\source\\repos\\covid-dashboard\\src\\data\\constants.js":"9","C:\\Users\\lilii\\source\\repos\\covid-dashboard\\src\\components\\TableComponents\\TableForm.jsx":"10","C:\\Users\\lilii\\source\\repos\\covid-dashboard\\src\\components\\TableComponents\\RadioButtonGroup.jsx":"11","C:\\Users\\lilii\\source\\repos\\covid-dashboard\\src\\components\\TableComponents\\Switcher.jsx":"12"},{"size":566,"mtime":1607540373693,"results":"13","hashOfConfig":"14"},{"size":390,"mtime":1607540373696,"results":"15","hashOfConfig":"14"},{"size":2308,"mtime":1607727481178,"results":"16","hashOfConfig":"14"},{"size":523,"mtime":1607613533442,"results":"17","hashOfConfig":"14"},{"size":110,"mtime":1607720211451,"results":"18","hashOfConfig":"14"},{"size":3513,"mtime":1607727481178,"results":"19","hashOfConfig":"14"},{"size":146,"mtime":1607685666711,"results":"20","hashOfConfig":"14"},{"size":238,"mtime":1607540373686,"results":"21","hashOfConfig":"14"},{"size":308,"mtime":1607727481178,"results":"22","hashOfConfig":"14"},{"size":1188,"mtime":1607726152474,"results":"23","hashOfConfig":"14"},{"size":930,"mtime":1607726978442,"results":"24","hashOfConfig":"14"},{"size":465,"mtime":1607725997008,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"16momfb",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lilii\\source\\repos\\covid-dashboard\\src\\index.jsx",[],["53","54","55","56","57","58"],"C:\\Users\\lilii\\source\\repos\\covid-dashboard\\src\\reportWebVitals.js",[],"C:\\Users\\lilii\\source\\repos\\covid-dashboard\\src\\App.jsx",[],"C:\\Users\\lilii\\source\\repos\\covid-dashboard\\src\\services\\requests.jsx",[],"C:\\Users\\lilii\\source\\repos\\covid-dashboard\\src\\components\\MapComponents\\InteractiveMap.jsx",[],"C:\\Users\\lilii\\source\\repos\\covid-dashboard\\src\\components\\TableComponents\\DashboardTable.jsx",["59"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Table from 'react-bootstrap/Table';\r\nimport TableForm from './TableForm';\r\nimport * as constants from '../../data/constants';\r\n\r\nconst DashboardTable = ({ countriesList, responseData, currentCountry }) => {\r\n  const [selectedPeriod, setSelectedPeriod] = useState(\r\n    constants.PERIODS.wholePeriod,\r\n  );\r\n  const [isFor100, setIsFor100] = useState(false);\r\n\r\n  const getTotalPopulation = (country) => {\r\n    let totalPopulation;\r\n    if (country === constants.WHOLE_WORLD_NAME) {\r\n      totalPopulation = countriesList.reduce(\r\n        (acc, el) => el.population + acc,\r\n        0,\r\n      );\r\n    } else {\r\n      totalPopulation = countriesList.find((el) => el.name === country)\r\n        .population;\r\n    }\r\n    return totalPopulation;\r\n  };\r\n\r\n  const countFor100 = (data, population) => Math.round((data * 100000) / population);\r\n\r\n  const getDataForPeriod = (period, data) => {\r\n    const result = {};\r\n    if (period === constants.PERIODS.wholePeriod) {\r\n      result.confirmed = data.TotalConfirmed;\r\n      result.deaths = data.TotalDeaths;\r\n      result.recovered = data.TotalRecovered;\r\n    } else {\r\n      result.confirmed = data.NewConfirmed;\r\n      result.deaths = data.NewDeaths;\r\n      result.recovered = data.NewRecovered;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const handleSelectedPeriod = (period) => {\r\n    setSelectedPeriod(period);\r\n  };\r\n\r\n  const handleIsFor100 = () => {\r\n    setIsFor100(!isFor100);\r\n  };\r\n\r\n  const getTableData = (country, data) => {\r\n    if (country === constants.WHOLE_WORLD_NAME) {\r\n      return data.Global;\r\n    }\r\n    const dataForCountry = data.Countries.find((el) => el.Country === country);\r\n    return dataForCountry;\r\n  };\r\n\r\n  const renderTableRows = () => {\r\n    const data = getTableData(currentCountry, responseData);\r\n    const periodData = getDataForPeriod(selectedPeriod, data);\r\n    const totalPopulation = getTotalPopulation(currentCountry);\r\n    if (isFor100) {\r\n      periodData.confirmed = countFor100(periodData.confirmed, totalPopulation);\r\n      periodData.deaths = countFor100(periodData.deaths, totalPopulation);\r\n      periodData.recovered = countFor100(periodData.recovered, totalPopulation);\r\n    }\r\n    return (\r\n      <tr>\r\n        <td>{periodData.confirmed}</td>\r\n        <td>{periodData.deaths}</td>\r\n        <td>{periodData.recovered}</td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-table\">\r\n      <h1 className=\"table-header\">\r\n        Info displayed for:&nbsp;\r\n        {currentCountry}\r\n      </h1>\r\n      <Table responsive>\r\n        <thead>\r\n          <tr>\r\n            {constants.HEADINGS.map((heading) => (\r\n              <th key={heading}>{heading}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {responseData.isNoData ? (\r\n            <tr>\r\n              <td colSpan={constants.HEADINGS.length}>{constants.ERROR_MESSAGE}</td>\r\n            </tr>\r\n          ) : (\r\n            renderTableRows()\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n      <TableForm\r\n        handleSelectedPeriod={handleSelectedPeriod}\r\n        handleIsFor100={handleIsFor100}\r\n        selectedPeriod={selectedPeriod}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nDashboardTable.propTypes = {\r\n  countriesList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  responseData: PropTypes.objectOf(PropTypes.any).isRequired,\r\n  currentCountry: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default DashboardTable;\r\n","C:\\Users\\lilii\\source\\repos\\covid-dashboard\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\lilii\\source\\repos\\covid-dashboard\\src\\components\\Footer\\Footer.jsx",[],"C:\\Users\\lilii\\source\\repos\\covid-dashboard\\src\\data\\constants.js",["60","61"],"export const PERIODS = {\r\n  wholePeriod: 'wholePeriod', lastDay: 'lastDay',\r\n};\r\n\r\nexport const HEADINGS = ['confirmed', 'deaths', 'recovered'];\r\n\r\nexport const ERROR_MESSAGE = 'Please, try later!';\r\nexport const CACHING_DATA_MESSAGE = 'Caching in progress';\r\nexport const WHOLE_WORLD_NAME = 'Whole world';\r\n","C:\\Users\\lilii\\source\\repos\\covid-dashboard\\src\\components\\TableComponents\\TableForm.jsx",[],"C:\\Users\\lilii\\source\\repos\\covid-dashboard\\src\\components\\TableComponents\\RadioButtonGroup.jsx",[],"C:\\Users\\lilii\\source\\repos\\covid-dashboard\\src\\components\\TableComponents\\Switcher.jsx",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":2,"message":"75","line":18,"column":10,"nodeType":"76","messageId":"77","endLine":19,"endColumn":1,"fix":"78"},{"ruleId":"79","severity":2,"message":"80","line":9,"column":33,"nodeType":"76","messageId":"81","endLine":9,"endColumn":46,"fix":"82"},{"ruleId":"83","severity":2,"message":"84","line":9,"column":47,"nodeType":"85","messageId":"77","fix":"86"},"lines-around-directive",["87"],"no-spaced-func",["88"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"comma-dangle","Missing trailing comma.","Literal","missing",{"range":"89","text":"90"},"quotes","Strings must use singlequote.","wrongQuotes",{"range":"91","text":"92"},"eol-last","Newline required at end of file but not found.","Program",{"range":"93","text":"94"},"padding-line-between-statements","func-call-spacing",[668,668],",",[292,305],"'Whole world'",[306,306],"\n"]